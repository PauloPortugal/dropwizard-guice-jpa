{
  "swagger" : "2.0",
  "info" : {
    "description" : "RESTful interface to easily consuming the Task API",
    "version" : "v1.0.0",
    "title" : "REST Task API"
  },
  "host" : "app.domain.com",
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/tasks" : {
      "get" : {
        "summary" : "Get all the tasks",
        "description" : "Returns all the tasks save on the database",
        "operationId" : "getTasks",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Task Entity"
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Creates a new task",
        "description" : "Creates a new task. Task descriptions are not unique.",
        "operationId" : "create",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/A new task"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/A new task"
            }
          }
        }
      }
    },
    "/tasks/{taskId}" : {
      "get" : {
        "summary" : "Get task by id",
        "description" : "Returns task by Id. If it does not exist it will return a HTTP 404",
        "operationId" : "getTask",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "taskId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 1
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/Task Entity"
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "put" : {
        "summary" : "Updates task by id",
        "description" : "Updates a task description if available in the database",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "taskId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 1
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "payload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/A new task"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      },
      "delete" : {
        "summary" : "Deletes task by id",
        "description" : "Deletes a if available in the database",
        "operationId" : "delete",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "description" : "taskId",
          "required" : true,
          "type" : "integer",
          "format" : "int64",
          "x-example" : 1
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    }
  },
  "definitions" : {
    "A new task" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "example" : "Lorem Ipsum, porro quisquam est qui dolorem ipsum quia dolo"
        }
      },
      "description" : "A description of a task"
    },
    "Task Entity" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1
        },
        "description" : {
          "type" : "string",
          "example" : "Lorem Ipsum, porro quisquam est qui dolorem ipsum quia dolo"
        }
      },
      "description" : "A description of a task"
    }
  }
}